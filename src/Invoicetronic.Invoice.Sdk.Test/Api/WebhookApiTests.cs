/*
 * Italian eInvoice API
 *
 * The Italian eInvoice API is a RESTful API that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1], or Interchange Service. The API is designed by Invoicetronic to be simple and easy to use, abstracting away SDI complexity while providing complete control over the invoice send/receive process. The API also provides advanced features as encryption at rest, invoice validation, multiple upload formats, webhooks, event logging, client SDKs for commonly used languages, and CLI tools.  For more information, see  [Invoicetronic website][2]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@invoicetronic.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Invoicetronic.Invoice.Sdk.Client;
using Invoicetronic.Invoice.Sdk.Api;
// uncomment below to import models
//using Invoicetronic.Invoice.Sdk.Model;

namespace Invoicetronic.Invoice.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing WebhookApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class WebhookApiTests : IDisposable
    {
        private WebhookApi instance;

        public WebhookApiTests()
        {
            instance = new WebhookApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of WebhookApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' WebhookApi
            //Assert.IsType<WebhookApi>(instance);
        }

        /// <summary>
        /// Test InvoiceV1WebhookGet
        /// </summary>
        [Fact]
        public void InvoiceV1WebhookGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? pageSize = null;
            //var response = instance.InvoiceV1WebhookGet(page, pageSize);
            //Assert.IsType<List<WebHook>>(response);
        }

        /// <summary>
        /// Test InvoiceV1WebhookIdDelete
        /// </summary>
        [Fact]
        public void InvoiceV1WebhookIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.InvoiceV1WebhookIdDelete(id);
            //Assert.IsType<WebHook>(response);
        }

        /// <summary>
        /// Test InvoiceV1WebhookIdGet
        /// </summary>
        [Fact]
        public void InvoiceV1WebhookIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.InvoiceV1WebhookIdGet(id);
            //Assert.IsType<WebHook>(response);
        }

        /// <summary>
        /// Test InvoiceV1WebhookPost
        /// </summary>
        [Fact]
        public void InvoiceV1WebhookPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WebHook webHook = null;
            //var response = instance.InvoiceV1WebhookPost(webHook);
            //Assert.IsType<WebHook>(response);
        }

        /// <summary>
        /// Test InvoiceV1WebhookPut
        /// </summary>
        [Fact]
        public void InvoiceV1WebhookPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WebHook webHook = null;
            //var response = instance.InvoiceV1WebhookPut(webHook);
            //Assert.IsType<WebHook>(response);
        }

        /// <summary>
        /// Test InvoiceV1WebhookhistoryGet
        /// </summary>
        [Fact]
        public void InvoiceV1WebhookhistoryGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? pageSize = null;
            //var response = instance.InvoiceV1WebhookhistoryGet(page, pageSize);
            //Assert.IsType<List<WebHookHistory>>(response);
        }

        /// <summary>
        /// Test InvoiceV1WebhookhistoryIdGet
        /// </summary>
        [Fact]
        public void InvoiceV1WebhookhistoryIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.InvoiceV1WebhookhistoryIdGet(id);
            //Assert.IsType<WebHookHistory>(response);
        }
    }
}
