/*
 * Invoicetronic API
 *
 * The [Invoicetronic API][2] is a RESTful service that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1], or Interchange Service. The API is designed to be simple and easy to use, abstracting away SDI complexity while providing complete control over the invoice send/receive process. It provides advanced features as encryption at rest, multi-language pre-flight invoice validation, multiple upload formats, webhooks, event logging, client SDKs, and CLI tools.  For more information, see  [Invoicetronic website][2]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/
 *
 * The version of the OpenAPI document: 1
 * Contact: support@invoicetronic.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Invoicetronic.Sdk.Client;
using Invoicetronic.Sdk.Api;
// uncomment below to import models
//using Invoicetronic.Sdk.Model;

namespace Invoicetronic.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing LogApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class LogApiTests : IDisposable
    {
        private LogApi instance;

        public LogApiTests()
        {
            instance = new LogApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of LogApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' LogApi
            //Assert.IsType<LogApi>(instance);
        }

        /// <summary>
        /// Test LogGet
        /// </summary>
        [Fact]
        public void LogGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? companyId = null;
            //string endpoint = null;
            //string method = null;
            //int? apiVerion = null;
            //int? statusCode = null;
            //DateTime? dateCreatedFrom = null;
            //DateTime? dateCreatedTo = null;
            //int? page = null;
            //int? pageSize = null;
            //string sort = null;
            //string query = null;
            //bool? success = null;
            //DateTime? dateTimeFrom = null;
            //DateTime? dateTimeTo = null;
            //var response = instance.LogGet(companyId, endpoint, method, apiVerion, statusCode, dateCreatedFrom, dateCreatedTo, page, pageSize, sort, query, success, dateTimeFrom, dateTimeTo);
            //Assert.IsType<List<Event>>(response);
        }

        /// <summary>
        /// Test LogIdGet
        /// </summary>
        [Fact]
        public void LogIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.LogIdGet(id);
            //Assert.IsType<Event>(response);
        }
    }
}
