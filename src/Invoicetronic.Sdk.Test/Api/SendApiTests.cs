/*
 * Invoicetronic API
 *
 * The [Invoicetronic API][2] is a RESTful service that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1], or Interchange Service. The API is designed to be simple and easy to use, abstracting away SDI complexity while providing complete control over the invoice send/receive process. It provides advanced features as encryption at rest, multi-language pre-flight invoice validation, multiple upload formats, webhooks, event logging, client SDKs, and CLI tools.  For more information, see  [Invoicetronic website][2]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/
 *
 * The version of the OpenAPI document: 1
 * Contact: info@invoicetronic.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using Invoicetronic.Sdk.Client;
using Invoicetronic.Sdk.Api;
// uncomment below to import models
//using Invoicetronic.Sdk.Model;

namespace Invoicetronic.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing SendApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SendApiTests : IDisposable
    {
        private SendApi instance;

        public SendApiTests()
        {
            instance = new SendApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SendApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SendApi
            //Assert.IsType<SendApi>(instance);
        }

        /// <summary>
        /// Test SendFilePost
        /// </summary>
        [Fact]
        public void SendFilePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //FileParameter file = null;
            //bool? validate = null;
            //string signature = null;
            //var response = instance.SendFilePost(file, validate, signature);
            //Assert.IsType<Send>(response);
        }

        /// <summary>
        /// Test SendGet
        /// </summary>
        [Fact]
        public void SendGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? companyId = null;
            //string identifier = null;
            //string committente = null;
            //string prestatore = null;
            //string fileName = null;
            //DateTime? lastUpdateFrom = null;
            //DateTime? lastUpdateTo = null;
            //DateTime? dateSentFrom = null;
            //DateTime? dateSentTo = null;
            //DateTime? documentDateFrom = null;
            //DateTime? documentDateTo = null;
            //string documentNumber = null;
            //bool? includePayload = null;
            //int? page = null;
            //int? pageSize = null;
            //string sort = null;
            //var response = instance.SendGet(companyId, identifier, committente, prestatore, fileName, lastUpdateFrom, lastUpdateTo, dateSentFrom, dateSentTo, documentDateFrom, documentDateTo, documentNumber, includePayload, page, pageSize, sort);
            //Assert.IsType<List<Send>>(response);
        }

        /// <summary>
        /// Test SendIdGet
        /// </summary>
        [Fact]
        public void SendIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //bool? includePayload = null;
            //var response = instance.SendIdGet(id, includePayload);
            //Assert.IsType<Send>(response);
        }

        /// <summary>
        /// Test SendIdentifierGet
        /// </summary>
        [Fact]
        public void SendIdentifierGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string identifier = null;
            //bool? includePayload = null;
            //var response = instance.SendIdentifierGet(identifier, includePayload);
            //Assert.IsType<Send>(response);
        }

        /// <summary>
        /// Test SendJsonPost
        /// </summary>
        [Fact]
        public void SendJsonPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //FatturaOrdinaria fatturaOrdinaria = null;
            //bool? validate = null;
            //string signature = null;
            //var response = instance.SendJsonPost(fatturaOrdinaria, validate, signature);
            //Assert.IsType<Send>(response);
        }

        /// <summary>
        /// Test SendPost
        /// </summary>
        [Fact]
        public void SendPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Send send = null;
            //bool? validate = null;
            //string signature = null;
            //var response = instance.SendPost(send, validate, signature);
            //Assert.IsType<Send>(response);
        }

        /// <summary>
        /// Test SendValidateFilePost
        /// </summary>
        [Fact]
        public void SendValidateFilePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //FileParameter file = null;
            //instance.SendValidateFilePost(file);
        }

        /// <summary>
        /// Test SendValidateJsonPost
        /// </summary>
        [Fact]
        public void SendValidateJsonPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //FatturaOrdinaria fatturaOrdinaria = null;
            //instance.SendValidateJsonPost(fatturaOrdinaria);
        }

        /// <summary>
        /// Test SendValidatePost
        /// </summary>
        [Fact]
        public void SendValidatePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Send send = null;
            //instance.SendValidatePost(send);
        }

        /// <summary>
        /// Test SendValidateXmlPost
        /// </summary>
        [Fact]
        public void SendValidateXmlPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //FatturaOrdinaria fatturaOrdinaria = null;
            //instance.SendValidateXmlPost(fatturaOrdinaria);
        }

        /// <summary>
        /// Test SendXmlPost
        /// </summary>
        [Fact]
        public void SendXmlPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //FatturaOrdinaria fatturaOrdinaria = null;
            //bool? validate = null;
            //string signature = null;
            //var response = instance.SendXmlPost(fatturaOrdinaria, validate, signature);
            //Assert.IsType<Send>(response);
        }
    }
}
