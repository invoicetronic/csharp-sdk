/*
 * Invoicetronic API
 *
 * The [Invoicetronic API][2] is a RESTful service that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1], or Interchange Service. The API is designed to be simple and easy to use, abstracting away SDI complexity while providing complete control over the invoice send/receive process. It provides advanced features as encryption at rest, multi-language pre-flight invoice validation, multiple upload formats, webhooks, event logging, client SDKs, and CLI tools.  For more information, see  [Invoicetronic website][2]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/
 *
 * The version of the OpenAPI document: 1
 * Contact: info@invoicetronic.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Invoicetronic.Sdk.Client.FileParameter;
using OpenAPIDateConverter = Invoicetronic.Sdk.Client.OpenAPIDateConverter;

namespace Invoicetronic.Sdk.Model
{
    /// <summary>
    /// DettaglioLinee
    /// </summary>
    [DataContract(Name = "DettaglioLinee")]
    public partial class DettaglioLinee : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DettaglioLinee" /> class.
        /// </summary>
        /// <param name="numeroLinea">numeroLinea.</param>
        /// <param name="tipoCessionePrestazione">tipoCessionePrestazione.</param>
        /// <param name="codiceArticolo">codiceArticolo.</param>
        /// <param name="descrizione">descrizione.</param>
        /// <param name="quantita">quantita.</param>
        /// <param name="unitaMisura">unitaMisura.</param>
        /// <param name="dataInizioPeriodo">dataInizioPeriodo.</param>
        /// <param name="dataFinePeriodo">dataFinePeriodo.</param>
        /// <param name="prezzoUnitario">prezzoUnitario.</param>
        /// <param name="scontoMaggiorazione">scontoMaggiorazione.</param>
        /// <param name="prezzoTotale">prezzoTotale.</param>
        /// <param name="aliquotaIva">aliquotaIva.</param>
        /// <param name="ritenuta">ritenuta.</param>
        /// <param name="natura">natura.</param>
        /// <param name="riferimentoAmministrazione">riferimentoAmministrazione.</param>
        /// <param name="altriDatiGestionali">altriDatiGestionali.</param>
        public DettaglioLinee(int numeroLinea = default, string tipoCessionePrestazione = default, List<CodiceArticolo> codiceArticolo = default, string descrizione = default, double? quantita = default, string unitaMisura = default, DateTime? dataInizioPeriodo = default, DateTime? dataFinePeriodo = default, double prezzoUnitario = default, List<ScontoMaggiorazione> scontoMaggiorazione = default, double prezzoTotale = default, double aliquotaIva = default, string ritenuta = default, string natura = default, string riferimentoAmministrazione = default, List<AltriDatiGestionali> altriDatiGestionali = default)
        {
            this.NumeroLinea = numeroLinea;
            this.TipoCessionePrestazione = tipoCessionePrestazione;
            this.CodiceArticolo = codiceArticolo;
            this.Descrizione = descrizione;
            this.Quantita = quantita;
            this.UnitaMisura = unitaMisura;
            this.DataInizioPeriodo = dataInizioPeriodo;
            this.DataFinePeriodo = dataFinePeriodo;
            this.PrezzoUnitario = prezzoUnitario;
            this.ScontoMaggiorazione = scontoMaggiorazione;
            this.PrezzoTotale = prezzoTotale;
            this.AliquotaIva = aliquotaIva;
            this.Ritenuta = ritenuta;
            this.Natura = natura;
            this.RiferimentoAmministrazione = riferimentoAmministrazione;
            this.AltriDatiGestionali = altriDatiGestionali;
        }

        /// <summary>
        /// Gets or Sets NumeroLinea
        /// </summary>
        [DataMember(Name = "numero_linea", EmitDefaultValue = false)]
        public int NumeroLinea { get; set; }

        /// <summary>
        /// Gets or Sets TipoCessionePrestazione
        /// </summary>
        [DataMember(Name = "tipo_cessione_prestazione", EmitDefaultValue = true)]
        public string TipoCessionePrestazione { get; set; }

        /// <summary>
        /// Gets or Sets CodiceArticolo
        /// </summary>
        [DataMember(Name = "codice_articolo", EmitDefaultValue = true)]
        public List<CodiceArticolo> CodiceArticolo { get; set; }

        /// <summary>
        /// Gets or Sets Descrizione
        /// </summary>
        [DataMember(Name = "descrizione", EmitDefaultValue = true)]
        public string Descrizione { get; set; }

        /// <summary>
        /// Gets or Sets Quantita
        /// </summary>
        [DataMember(Name = "quantita", EmitDefaultValue = true)]
        public double? Quantita { get; set; }

        /// <summary>
        /// Gets or Sets UnitaMisura
        /// </summary>
        [DataMember(Name = "unita_misura", EmitDefaultValue = true)]
        public string UnitaMisura { get; set; }

        /// <summary>
        /// Gets or Sets DataInizioPeriodo
        /// </summary>
        [DataMember(Name = "data_inizio_periodo", EmitDefaultValue = true)]
        public DateTime? DataInizioPeriodo { get; set; }

        /// <summary>
        /// Gets or Sets DataFinePeriodo
        /// </summary>
        [DataMember(Name = "data_fine_periodo", EmitDefaultValue = true)]
        public DateTime? DataFinePeriodo { get; set; }

        /// <summary>
        /// Gets or Sets PrezzoUnitario
        /// </summary>
        [DataMember(Name = "prezzo_unitario", EmitDefaultValue = false)]
        public double PrezzoUnitario { get; set; }

        /// <summary>
        /// Gets or Sets ScontoMaggiorazione
        /// </summary>
        [DataMember(Name = "sconto_maggiorazione", EmitDefaultValue = true)]
        public List<ScontoMaggiorazione> ScontoMaggiorazione { get; set; }

        /// <summary>
        /// Gets or Sets PrezzoTotale
        /// </summary>
        [DataMember(Name = "prezzo_totale", EmitDefaultValue = false)]
        public double PrezzoTotale { get; set; }

        /// <summary>
        /// Gets or Sets AliquotaIva
        /// </summary>
        [DataMember(Name = "aliquota_iva", EmitDefaultValue = false)]
        public double AliquotaIva { get; set; }

        /// <summary>
        /// Gets or Sets Ritenuta
        /// </summary>
        [DataMember(Name = "ritenuta", EmitDefaultValue = true)]
        public string Ritenuta { get; set; }

        /// <summary>
        /// Gets or Sets Natura
        /// </summary>
        [DataMember(Name = "natura", EmitDefaultValue = true)]
        public string Natura { get; set; }

        /// <summary>
        /// Gets or Sets RiferimentoAmministrazione
        /// </summary>
        [DataMember(Name = "riferimento_amministrazione", EmitDefaultValue = true)]
        public string RiferimentoAmministrazione { get; set; }

        /// <summary>
        /// Gets or Sets AltriDatiGestionali
        /// </summary>
        [DataMember(Name = "altri_dati_gestionali", EmitDefaultValue = true)]
        public List<AltriDatiGestionali> AltriDatiGestionali { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DettaglioLinee {\n");
            sb.Append("  NumeroLinea: ").Append(NumeroLinea).Append("\n");
            sb.Append("  TipoCessionePrestazione: ").Append(TipoCessionePrestazione).Append("\n");
            sb.Append("  CodiceArticolo: ").Append(CodiceArticolo).Append("\n");
            sb.Append("  Descrizione: ").Append(Descrizione).Append("\n");
            sb.Append("  Quantita: ").Append(Quantita).Append("\n");
            sb.Append("  UnitaMisura: ").Append(UnitaMisura).Append("\n");
            sb.Append("  DataInizioPeriodo: ").Append(DataInizioPeriodo).Append("\n");
            sb.Append("  DataFinePeriodo: ").Append(DataFinePeriodo).Append("\n");
            sb.Append("  PrezzoUnitario: ").Append(PrezzoUnitario).Append("\n");
            sb.Append("  ScontoMaggiorazione: ").Append(ScontoMaggiorazione).Append("\n");
            sb.Append("  PrezzoTotale: ").Append(PrezzoTotale).Append("\n");
            sb.Append("  AliquotaIva: ").Append(AliquotaIva).Append("\n");
            sb.Append("  Ritenuta: ").Append(Ritenuta).Append("\n");
            sb.Append("  Natura: ").Append(Natura).Append("\n");
            sb.Append("  RiferimentoAmministrazione: ").Append(RiferimentoAmministrazione).Append("\n");
            sb.Append("  AltriDatiGestionali: ").Append(AltriDatiGestionali).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
