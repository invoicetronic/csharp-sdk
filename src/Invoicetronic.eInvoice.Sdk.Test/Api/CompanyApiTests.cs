/*
 * Italian eInvoice API
 *
 * The Italian eInvoice API is a RESTful API that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1] (Interchange Service). The API is designed by Invoicetronic to be simple and easy to use, abstracting away the Interchange Service's complexity while still providing complete control over the invoice send/receive process. The API also provides advanced features and a rich toolchain, such as invoice validation, multiple upload methods, webhooks, event logs, CORS support, client SDKs for commonly used languages, and CLI tools.  For more information, see:  - [Invoicetronic website][2] - [Invoice API reference][3]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/ [3]: https://api.invoicetronic.com/invoice/v1/docs 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@invoicetronic.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Invoicetronic.eInvoice.Sdk.Client;
using Invoicetronic.eInvoice.Sdk.Api;
// uncomment below to import models
//using Invoicetronic.eInvoice.Sdk.Model;

namespace Invoicetronic.eInvoice.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing CompanyApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CompanyApiTests : IDisposable
    {
        private CompanyApi instance;

        public CompanyApiTests()
        {
            instance = new CompanyApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CompanyApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CompanyApi
            //Assert.IsType<CompanyApi>(instance);
        }

        /// <summary>
        /// Test InvoiceV1CompanyGet
        /// </summary>
        [Fact]
        public void InvoiceV1CompanyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? pageSize = null;
            //var response = instance.InvoiceV1CompanyGet(page, pageSize);
            //Assert.IsType<List<Company>>(response);
        }

        /// <summary>
        /// Test InvoiceV1CompanyIdDelete
        /// </summary>
        [Fact]
        public void InvoiceV1CompanyIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.InvoiceV1CompanyIdDelete(id);
            //Assert.IsType<Company>(response);
        }

        /// <summary>
        /// Test InvoiceV1CompanyIdGet
        /// </summary>
        [Fact]
        public void InvoiceV1CompanyIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.InvoiceV1CompanyIdGet(id);
            //Assert.IsType<Company>(response);
        }

        /// <summary>
        /// Test InvoiceV1CompanyPost
        /// </summary>
        [Fact]
        public void InvoiceV1CompanyPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Company company = null;
            //var response = instance.InvoiceV1CompanyPost(company);
            //Assert.IsType<Company>(response);
        }

        /// <summary>
        /// Test InvoiceV1CompanyPut
        /// </summary>
        [Fact]
        public void InvoiceV1CompanyPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Company company = null;
            //var response = instance.InvoiceV1CompanyPut(company);
            //Assert.IsType<Company>(response);
        }
    }
}
